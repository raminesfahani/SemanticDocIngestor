@using System.Globalization
@using SemanticDocIngestor.AppHost.BlazorUI.Services

@using Microsoft.AspNetCore.WebUtilities
@using SemanticDocIngestor.Domain.Abstractions.Factories
@inject NavigationManager Navigation
@inject IOllamaServiceFactory OllamaFactoryProvider
@inject PreloadService PreloadService
@inject ToastService ToastService
@inject IJSRuntime JSRuntime
@inject ChatSidebarUpdateService ChatSidebarUpdateService
@implements IDisposable

<div class="sidebar">
    <div class="logo">
        <img src="logo.png" class="me-2" style="width: 45px;" />
        <span>SemanticDocIngestor WebUI</span>
    </div>
    <NavLink href="/conversations" class="new-chat-btn" id="new-chat">
        <i class="fas fa-plus"></i>
        <span>New Chat</span>
    </NavLink>
    <div class="settings mt-0 border-0 pt-0">
        <button @onclick="@(() => Navigation.NavigateTo("/", false))">
            <Icon Name="IconName.House"></Icon>
            <span>Home</span>
        </button>
        <button id="clear-history" @onclick="@(() => Navigation.NavigateTo("/ollama-models", false))">
            <Icon Name="IconName.Box"></Icon>
            <span>Ollama Models</span>
        </button>
    </div>

    <div class="settings">
        <button id="toggle-theme" onclick="toggleTheme()">
            <i class="fas fa-moon"></i>
            <span>Dark Mode</span>
        </button>
    </div>
</div>

@code {
    [Parameter] public EventCallback<string> OnConversationSelected { get; set; }
    [Parameter] public EventCallback OnConversationUpdated { get; set; }
    [Parameter] public string? ConversationId { get; set; }
    [Parameter] public bool isOpen { get; set; }

    private string search = "";

    protected override async Task OnInitializedAsync()
    {
        
    }

    private void LoadQueryParam()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("conversationId", out var id))
        {
            ConversationId = id.ToString();
        }
        else
        {
            ConversationId = null;
        }
    }

    public void Dispose()
    {
        
    }
}