using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SemanticDocIngestor.Domain.Entities.Ingestion
{
    /// <summary>
    /// Represents a single chunk of a document with its content, embedding, and metadata.
    /// This is the core entity used for storage and retrieval in both vector and keyword stores.
    /// </summary>
    public class DocumentChunk
    {
        /// <summary>
        /// Gets or sets the text content of this document chunk.
        /// </summary>
        public string Content { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the vector embedding representation of the content.
        /// Generated by the embedding model (e.g., nomic-embed-text) for semantic search.
        /// Null if embedding has not been generated yet.
        /// </summary>
        public float[]? Embedding { get; set; }

        /// <summary>
        /// Gets or sets the metadata associated with this document chunk,
        /// including file name, source, page number, and other contextual information.
        /// </summary>
        public IngestionMetadata Metadata { get; set; } = new();

        /// <summary>
        /// Gets or sets the sequential index of this chunk within the source document.
        /// Zero-based index indicating the chunk's position in the document.
        /// </summary>
        public int Index { get; set; }

        /// <summary>
        /// Gets or sets the retrieval score from vector similarity or hybrid search.
        /// Higher scores indicate greater relevance to the search query.
        /// This is a transient property populated during search operations.
        /// </summary>
        public double? RetrievalScore { get; set; }
    }
}
